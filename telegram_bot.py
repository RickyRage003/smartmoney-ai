import os
import asyncio
from telegram import Update, InputFile
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=CHAT_ID, text="ü§ñ SmartMoney AI –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!")

    # –û—Ç–ø—Ä–∞–≤–∏–º –≥—Ä–∞—Ñ–∏–∫
    try:
        with open("data/filter_chart.png", "rb") as photo:
            await context.bot.send_photo(chat_id=CHAT_ID, photo=photo, caption="üìä –ì—Ä–∞—Ñ–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
    except Exception as e:
        await context.bot.send_message(chat_id=CHAT_ID, text=f"‚ùå –û—à–∏–±–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º: {e}")

    # –û—Ç–ø—Ä–∞–≤–∏–º CSV
    try:
        with open("data/filtered_signals.csv", "rb") as doc:
            await context.bot.send_document(chat_id=CHAT_ID, document=doc, filename="filtered_signals.csv")
    except Exception as e:
        await context.bot.send_message(chat_id=CHAT_ID, text=f"‚ùå –û—à–∏–±–∫–∞ —Å CSV: {e}")

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ñ–¥—ë—Ç /start...")
    app.run_polling()
